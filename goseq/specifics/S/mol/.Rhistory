table(gene.data)
genes.list <- na.omit(gene.data)
#gene.data <- filter(topSDG,V1 %in% names(gene.data))
feature.lengths <- read.table("../../gene_lengths_sort.txt", header=FALSE, sep=" ")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
resdata <- read.table("../../gene_lengths_sort.txt", header=FALSE,sep =" ")
gene.data <- integer(length=length(resdata$V1))
names(gene.data) <- resdata$V1
topSDG <- read.table("../bio/dg_ids.txt", header=FALSE,sep =" ")
topSDG_ids <- topSDG$V1
AbdUp <- topSDG_ids
#upregulated genes
for (item in AbdUp) {
i <- which(names(gene.data)==item)
gene.data[i] <- 1
}
table(gene.data)
genes.list <- na.omit(gene.data)
#gene.data <- filter(topSDG,V1 %in% names(gene.data))
feature.lengths <- read.table("../../gene_lengths_sort.txt", header=FALSE, sep=" ")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/DG/cell")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv.tsv", header=TRUE, sep="\t")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/DG/mol")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_mol_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/DG_S/bio")
resdata <- read.table("../../gene_lengths_sort.txt", header=FALSE,sep =" ")
gene.data <- integer(length=length(resdata$V1))
names(gene.data) <- resdata$V1
topSDG <- read.table("../bio/dgs_ids_final.txt", header=FALSE,sep =" ")
topSDG_ids <- topSDG$V1
AbdUp <- topSDG_ids
#upregulated genes
for (item in AbdUp) {
i <- which(names(gene.data)==item)
gene.data[i] <- 1
}
table(gene.data)
genes.list <- na.omit(gene.data)
#gene.data <- filter(topSDG,V1 %in% names(gene.data))
feature.lengths <- read.table("../../gene_lengths_sort.txt", header=FALSE, sep=" ")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_mol_final.tsv", header=TRUE, sep="\t")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
GO.wall$term[7] <- "meiotic cell cycle"
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/DG_S/cell")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/DG_S/mol")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_mol_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG/bio")
resdata <- read.table("../../gene_lengths_sort.txt", header=FALSE,sep =" ")
gene.data <- integer(length=length(resdata$V1))
names(gene.data) <- resdata$V1
topSDG <- read.table("../bio/final_hg_ids.txt", header=FALSE,sep =" ")
topSDG_ids <- topSDG$V1
AbdUp <- topSDG_ids
#upregulated genes
for (item in AbdUp) {
i <- which(names(gene.data)==item)
gene.data[i] <- 1
}
table(gene.data)
genes.list <- na.omit(gene.data)
#gene.data <- filter(topSDG,V1 %in% names(gene.data))
feature.lengths <- read.table("../../gene_lengths_sort.txt", header=FALSE, sep=" ")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG/cell")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
View(GO.wall)
GO.wall$term[10]
GO.wall$term[10] <- "obsolete thylakoid part"
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG/cell")
setwd("~/Desktop/Funaria/GOseq/specifics/HG/bio")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG/cell")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
chart1
GO.wall$term[10] <- "obsolete thylakoid part"
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG/mol")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_mol_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
GO.wall$term[7]
GO.wall$term[7] <- "DNA topoisomerase type II (double strand cut, ATP-hydrolyzing) activity"
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG_DG/bio")
resdata <- read.table("../../gene_lengths_sort.txt", header=FALSE,sep =" ")
topSDG <- read.table("../bio/final_hgs_ids.txt", header=FALSE,sep =" ")
topSDG_ids <- topSDG$V1
AbdUp <- topSDG_ids
#upregulated genes
for (item in AbdUp) {
i <- which(names(gene.data)==item)
gene.data[i] <- 1
}
table(gene.data)
genes.list <- na.omit(gene.data)
#gene.data <- filter(topSDG,V1 %in% names(gene.data))
feature.lengths <- read.table("../../gene_lengths_sort.txt", header=FALSE, sep=" ")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG_DG/cell")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/HG_DG/mol")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_mol_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
setwd("~/Desktop/Funaria/GOseq/specifics/HG_S/bio")
setwd("~/Desktop/Funaria/GOseq/specifics/S/bio")
topSDG <- read.table("../bio/final_s_ids.txt", header=FALSE,sep =" ")
topSDG_ids <- topSDG$V1
AbdUp <- topSDG_ids
#upregulated genes
for (item in AbdUp) {
i <- which(names(gene.data)==item)
gene.data[i] <- 1
}
table(gene.data)
genes.list <- na.omit(gene.data)
#gene.data <- filter(topSDG,V1 %in% names(gene.data))
feature.lengths <- read.table("../../gene_lengths_sort.txt", header=FALSE, sep=" ")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_bio_new.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/S/cell")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_cell_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
length(AbdUp) == table(gene.data)[2]
genes.length.data <- filter(feature.lengths,V1 %in% names(gene.data))
genes.bias.data <- genes.length.data$V2
names(genes.bias.data) <- genes.length.data$V1
#look at end of python script
pwf <- nullp(genes.list,bias.data=genes.bias.data,plot.fit = FALSE)
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
library(ggplot2)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
setwd("~/Desktop/Funaria/GOseq/specifics/S/mol")
#feature.lengths <- feature.lengths[,c(1,3)]
cat.map <- read.table("../../../DE/GO_mol_final.tsv", header=TRUE, sep="\t")
GoCats <- cat.map[,c(1,2)]
GO.wall <- goseq(pwf, gene2cat = GoCats, method = "Wallenius", use_genes_without_cat = FALSE)
chart1 <- GO.wall %>%
top_n(10, wt=-over_represented_pvalue) %>%
mutate(hitsPerc=numDEInCat*100/numInCat) %>%
ggplot(aes(x=hitsPerc,
y=term,
colour=over_represented_pvalue,
size=numDEInCat)) +
geom_point() +
expand_limits(x=0) +
labs(x="Hits (%)", y="GO term", colour="p value", size="Count")
chart1
ggsave("plot.png", chart1)
